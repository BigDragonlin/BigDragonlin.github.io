(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{413:function(t,s,a){"use strict";a.r(s);var n=a(4),_=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"c语言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#c语言"}},[t._v("#")]),t._v(" C语言")]),t._v(" "),s("h1",{attrs:{id:"_1-计算机导论"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-计算机导论"}},[t._v("#")]),t._v(" 1.计算机导论")]),t._v(" "),s("h2",{attrs:{id:"_1-1与门-或门-非门"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1与门-或门-非门"}},[t._v("#")]),t._v(" 1.1与门，或门，非门")]),t._v(" "),s("p",[t._v("1&1 ，结果为1")]),t._v(" "),s("p",[t._v("1&0，结果为0")]),t._v(" "),s("p",[t._v("1 | 1，结果为1")]),t._v(" "),s("p",[t._v("1 | 0 ，结果为1")]),t._v(" "),s("p",[t._v("！1 ，结果为0")]),t._v(" "),s("p",[t._v("！0，结果为1")]),t._v(" "),s("h1",{attrs:{id:"_2-c语言基本格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-c语言基本格式"}},[t._v("#")]),t._v(" 2.C语言基本格式")]),t._v(" "),s("ul",[s("li",[t._v("程序的入口 int main")]),t._v(" "),s("li",[t._v("多行注释和单行注释")]),t._v(" "),s("li",[t._v("printf()")]),t._v(" "),s("li",[t._v("头文件的引入")])]),t._v(" "),s("h1",{attrs:{id:"_3-基本数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-基本数据类型"}},[t._v("#")]),t._v(" 3.基本数据类型")]),t._v(" "),s("h2",{attrs:{id:"_3-1-源码、反码和补码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-源码、反码和补码"}},[t._v("#")]),t._v(" 3.1 源码、反码和补码")]),t._v(" "),s("ul",[s("li",[t._v("源码普通的二进制表示，正实数是它本身，负数最高位为1\n"),s("ul",[s("li",[t._v("7  ：0000 0111")]),t._v(" "),s("li",[t._v("-7： 1000 0111")])])]),t._v(" "),s("li",[t._v("反码就是正数不变，负数取反\n"),s("ul",[s("li",[t._v("7：0000 0111")]),t._v(" "),s("li",[t._v("-7：1111 1000")]),t._v(" "),s("li",[t._v("相加得")]),t._v(" "),s("li",[t._v("1111 1111 -0")])])]),t._v(" "),s("li",[t._v("补码就是正数不变，负数变成反码再加1\n"),s("ul",[s("li",[t._v("7：000 0111")]),t._v(" "),s("li",[t._v("-7：1111001")]),t._v(" "),s("li",[t._v("相加得")]),t._v(" "),s("li",[t._v("1 0000 0000")])])]),t._v(" "),s("li",[t._v("C就是使用的补码")])]),t._v(" "),s("h2",{attrs:{id:"_3-2-printf-格式换输出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-printf-格式换输出"}},[t._v("#")]),t._v(" 3.2 printf（）格式换输出")]),t._v(" "),s("p",[t._v("这样，我们就知道该如何打印我们变量的值了，当然，除了使用"),s("code",[t._v("%d")]),t._v("打印有符号整数之外，还有其他的：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("格式控制符")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("%c")]),t._v(" "),s("td",[t._v("输出一个单一的字符")])]),t._v(" "),s("tr",[s("td",[t._v("%hd、%d、%ld")]),t._v(" "),s("td",[t._v("以十进制、有符号的形式输出 short、int、long 类型的整数")])]),t._v(" "),s("tr",[s("td",[t._v("%hu、%u、%lu")]),t._v(" "),s("td",[t._v("以十进制、无符号的形式输出 short、int、long 类型的整数")])]),t._v(" "),s("tr",[s("td",[t._v("%ho、%o、%lo")]),t._v(" "),s("td",[t._v("以八进制、不带前缀、无符号的形式输出 short、int、long 类型的整数")])]),t._v(" "),s("tr",[s("td",[t._v("%#ho、%#o、%#lo")]),t._v(" "),s("td",[t._v("以八进制、带前缀、无符号的形式输出 short、int、long 类型的整数")])]),t._v(" "),s("tr",[s("td",[t._v("%hx、%x、%lx %hX、%X、%lX")]),t._v(" "),s("td",[t._v("以十六进制、不带前缀、无符号的形式输出 short、int、long 类型的整数。如果 x 小写，那么输出的十六进制数字也小写；如果 X 大写，那么输出的十六进制数字也大写。")])]),t._v(" "),s("tr",[s("td",[t._v("%#hx、%#x、%#lx %#hX、%#X、%#lX")]),t._v(" "),s("td",[t._v("以十六进制、带前缀、无符号的形式输出 short、int、long 类型的整数。如果 x 小写，那么输出的十六进制数字和前缀都小写；如果 X 大写，那么输出的十六进制数字和前缀都大写。")])]),t._v(" "),s("tr",[s("td",[t._v("%f、%lf")]),t._v(" "),s("td",[t._v("以十进制的形式输出 float、double 类型的小数")])]),t._v(" "),s("tr",[s("td",[t._v("%e、%le %E、%lE")]),t._v(" "),s("td",[t._v("以指数的形式输出 float、double 类型的小数。如果 e 小写，那么输出结果中的 e 也小写；如果 E 大写，那么输出结果中的 E 也大写。")])]),t._v(" "),s("tr",[s("td",[t._v("%g、%lg %G、%lG")]),t._v(" "),s("td",[t._v("以十进制和指数中较短的形式输出 float、double 类型的小数，并且小数部分的最后不会添加多余的 0。如果 g 小写，那么当以指数形式输出时 e 也小写；如果 G 大写，那么当以指数形式输出时 E 也大写。")])]),t._v(" "),s("tr",[s("td",[t._v("%s")]),t._v(" "),s("td",[t._v("输出一个字符串")])])])]),t._v(" "),s("p",[t._v("变量如果没有赋初始值")]),t._v(" "),s("ul",[s("li",[t._v("变量如果没有被赋初始值，这样比较危险。它的值是不确定的")])]),t._v(" "),s("div",{staticClass:"language-jsx line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-jsx"}},[s("code",[t._v("int "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//    print format")]),t._v("\nint a "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d %d %d"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//结果")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//0 0 32759")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h2",{attrs:{id:"_3-3-无符号数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-无符号数"}},[t._v("#")]),t._v(" 3.3 无符号数")]),t._v(" "),s("div",{staticClass:"language-c line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("65")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%u"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出为191")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//补码形式为 1011 1111")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//转换为二进制为191")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h2",{attrs:{id:"_3-4-类型转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-类型转换"}},[t._v("#")]),t._v(" 3.4 类型转换")]),t._v(" "),s("p",[t._v("• 当有一个更高优先级的类型和一个低优先级的类型同时参与运算时，统一转换为高优先级运算，比如int和long参与运算，那么int转换为long再算，所以结果也是long类型，int和double参与运算，那么先把int转换为double再算。")]),t._v(" "),s("h2",{attrs:{id:"_3-5-自增运算自减运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-自增运算自减运算符"}},[t._v("#")]),t._v(" 3.5 自增运算自减运算符")]),t._v(" "),s("p",[t._v("自增运算符"),s("code",[t._v("++")]),t._v("\n在前，那么先自增再出结果；自增运算符"),s("code",[t._v("++")]),t._v("\n在后，那么先出结果再自增。各位小伙伴可以直接记运算符的位置，来方便记忆。")]),t._v(" "),s("h2",{attrs:{id:"_3-6-左移运算符和右移运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-左移运算符和右移运算符"}},[t._v("#")]),t._v(" 3.6 左移运算符和右移运算符")]),t._v(" "),s("p",[t._v("相当于十进制中的平方")])])}),[],!1,null,null,null);s.default=_.exports}}]);
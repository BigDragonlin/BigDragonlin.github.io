(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{417:function(s,n,a){"use strict";a.r(n);var e=a(4),t=Object(e.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[s._v("typedef 在 C++ 中是一个关键字，用于为现有的类型创建一个新的名字（别名）。\n这个机制属于 C++ 的类型系统的一部分，允许程序员给类型起一个新的、可能更简短或更具描述性的名字。\n使用 typedef 可以提高代码的可读性和可维护性，特别是在处理复杂的数据类型（如指针、数组、结构体等）时。\n下面是关于如何使用 typedef 的具体说明：")]),s._v(" "),n("h2",{attrs:{id:"_1-基本用法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本用法"}},[s._v("#")]),s._v(" 1. 基本用法")]),s._v(" "),n("p",[n("code",[s._v("typedef")]),s._v(" 最基本的用法是为类型定义一个新名字。\n例如，你可以为 unsigned long long 定义一个简短的别名 ull：")]),s._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("typedef unsigned long long ull;\null a = 1234567890123456789ULL;\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h2",{attrs:{id:"_2-结构体和类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-结构体和类"}},[s._v("#")]),s._v(" 2. 结构体和类")]),s._v(" "),n("p",[s._v("在 C++ 中，typedef 经常用来为结构体和类定义别名，使得在声明对象时不需要重复使用 struct 或 class 关键字。")]),s._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("typedef struct {\nint x, y;\n} Point;\n\nPoint p1, p2;\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("或者给类定义别名：")]),s._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class MyClass {\npublic:\nvoid display() { /* ... */ }\n};\n\ntypedef MyClass MC;\nMC obj;\nobj.display();\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("h2",{attrs:{id:"_3-指针类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-指针类型"}},[s._v("#")]),s._v(" 3. 指针类型")]),s._v(" "),n("p",[s._v("对于指针类型，typedef 也可以简化声明，尤其是函数指针或数组指针。")]),s._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("typedef int* IntPtr;\nIntPtr ptr; // 等同于 int* ptr;\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h2",{attrs:{id:"_4-函数指针"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-函数指针"}},[s._v("#")]),s._v(" 4. 函数指针")]),s._v(" "),n("p",[s._v("typedef 可以使函数指针的声明更加简洁明了。")]),s._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("typedef void (*FuncPtr)(int, double);\nFuncPtr myFunc;\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#include <iostream>\n\nvoid exampleFunc(int x, double y)\n{\n    using namespace std;\n    cout << "x: " << x << ", y: " << y << endl;\n}\n\nint main()\n{\n    typedef void (*FuncPtr)(int, double);\n    FuncPtr myFunc = exampleFunc;\n    myFunc(1, 2.0);\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("h2",{attrs:{id:"_5-模板别名-c-11-及之后"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-模板别名-c-11-及之后"}},[s._v("#")]),s._v(" 5. 模板别名（C++11 及之后）")]),s._v(" "),n("p",[s._v("从 C++11 开始，可以使用 using 关键字来定义类型的别名，这在模板编程中尤其有用。")]),s._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("template<typename T>\nusing Ptr = T*;\n\nPtr<int> intPtr; // 等同于 int* intPtr;\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);
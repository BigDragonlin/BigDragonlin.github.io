(window.webpackJsonp=window.webpackJsonp||[]).push([[99],{454:function(a,t,s){"use strict";s.r(t);var e=s(4),r=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"cmake-简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cmake-简介"}},[a._v("#")]),a._v(" CMake 简介")]),a._v(" "),t("ul",[t("li",[a._v("CMake是一个跨平台的自动化构建系统，它使用文本文件（CMakeLists.txt）定义项目构建的设置。")]),a._v(" "),t("li",[a._v("它可以生成标准的构建文件，如Unix的Makefile或Windows的Visual Studio项目。")])]),a._v(" "),t("h2",{attrs:{id:"安装cmake"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装cmake"}},[a._v("#")]),a._v(" 安装CMake")]),a._v(" "),t("ul",[t("li",[a._v("不同平台（Windows、Linux、macOS）上CMake的安装方法。")])]),a._v(" "),t("h2",{attrs:{id:"基本工作流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本工作流程"}},[a._v("#")]),a._v(" 基本工作流程")]),a._v(" "),t("ol",[t("li",[a._v("编写 CMakeLists.txt 文件： 定义项目的构建规则和依赖关系。")]),a._v(" "),t("li",[a._v("生成构建文件： 使用 CMake 生成适合当前平台的构建系统文件（例如 Makefile、Visual Studio 工程文件）。")]),a._v(" "),t("li",[a._v("执行构建： 使用生成的构建系统文件（如 make、ninja、msbuild）来编译项目。")])]),a._v(" "),t("h2",{attrs:{id:"基本概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[a._v("#")]),a._v(" 基本概念")]),a._v(" "),t("ul",[t("li",[a._v("CMakeLists.txt文件：项目的根目录下的文件，定义了所有构建配置。")]),a._v(" "),t("li",[a._v("变量和缓存：在CMake中设置和使用变量。")]),a._v(" "),t("li",[a._v("指令：add_executable, add_library, target_link_libraries等。")])]),a._v(" "),t("h2",{attrs:{id:"步骤-1-安装cmake"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#步骤-1-安装cmake"}},[a._v("#")]),a._v(" 步骤 1: 安装CMake")]),a._v(" "),t("p",[a._v("首先，你需要在你的计算机上安装CMake。CMake的安装相对简单，你可以从CMake的官方网站下载适合你操作系统的安装包进行安装。对于大多数用户，安装向导将指导你完成安装过程。")]),a._v(" "),t("h2",{attrs:{id:"步骤-2-创建一个简单的项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#步骤-2-创建一个简单的项目"}},[a._v("#")]),a._v(" 步骤 2: 创建一个简单的项目")]),a._v(" "),t("h3",{attrs:{id:"创建项目目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建项目目录"}},[a._v("#")]),a._v(" 创建项目目录：")]),a._v(" "),t("p",[a._v("首先创建一个新的目录来存放你的项目文件，例如HelloWorld。")]),a._v(" "),t("h3",{attrs:{id:"创建源文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建源文件"}},[a._v("#")]),a._v(" 创建源文件：")]),a._v(" "),t("p",[a._v("在HelloWorld目录中，创建一个名为main.cpp的源文件，内容如下：")]),a._v(" "),t("div",{staticClass:"language-c++ line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('#include <iostream>\n\nint main() {\nstd::cout << "Hello, World!" << std::endl;\nreturn 0;\n}\n')])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br")])]),t("h3",{attrs:{id:"编写cmakelists-txt"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编写cmakelists-txt"}},[a._v("#")]),a._v(" 编写CMakeLists.txt：")]),a._v(" "),t("p",[a._v("在HelloWorld目录中，创建一个名为CMakeLists.txt的文件，内容如下：")]),a._v(" "),t("div",{staticClass:"language-cmake line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-cmake"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("cmake_minimum_required")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token property"}},[a._v("VERSION")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3.10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 指定CMake的最小版本要求")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("project")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("HelloWorld"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 定义项目名称")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("add_executable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("helloWorld main.cpp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 添加一个可执行文件，名为helloWorld，源文件是main.cpp")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("h2",{attrs:{id:"步骤-3-构建项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#步骤-3-构建项目"}},[a._v("#")]),a._v(" 步骤 3: 构建项目")]),a._v(" "),t("ul",[t("li",[a._v("打开终端或命令提示符，导航到HelloWorld目录。")]),a._v(" "),t("li",[a._v("创建一个名为build的目录来存放构建输出，使用命令mkdir build && cd build。")]),a._v(" "),t("li",[a._v("运行cmake ..来生成构建系统。")]),a._v(" "),t("li",[a._v("然后运行cmake --build .来构建项目。\n如果一切顺利，你将在build目录中看到构建的执行文件（在Windows上是helloWorld.exe，在Linux/macOS上是helloWorld）")])])])}),[],!1,null,null,null);t.default=r.exports}}]);